plugins {
    id 'java'
    id 'io.freefair.lombok'
    id 'com.gorylenko.gradle-git-properties'
    id 'jacoco'
    id 'org.sonarqube'
}

group = 'net.ripe.rpki-ripe-ncc'

repositories {
    mavenLocal()
    mavenCentral() {
        content {
            excludeGroupByRegex "com\\.thales\\.esecurity\\.*"
            excludeGroupByRegex "com\\.ncipher\\.nfast\\.*"
        }
    }

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/releases')
        content {
            excludeGroupByRegex "com\\.thales\\.esecurity\\.*"
            excludeGroupByRegex "com\\.ncipher\\.nfast\\.*"
        }
    }
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
        content {
            excludeGroupByRegex "com\\.thales\\.esecurity\\.*"
            excludeGroupByRegex "com\\.ncipher\\.nfast\\.*"
        }
    }

    maven {
        url = uri('https://maven.nexus.ripe.net/repository/maven-third-party')
    }
    maven {
        url = uri('https://maven.nexus.ripe.net/repository/maven-third-party-snapshots')
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:all'
                         << '-Xlint:-processing'
                         << '-Xlint:-serial'
                         << '-Werror'
}

tasks.named('test', Test) {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

gitProperties {
    extProperty = 'gitProps'
}

jacocoTestReport {
    // XML report for SonarQube
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property 'sonar.exclusions', 'src/main/java/db/migration/V*.java'
        property 'sonar.qualitygate.wait', 'true'
        property 'sonar.qualitygate.timeout', System.getenv('SONAR_QUALITYGATE_TIMEOUT') ?: '300'
    }
}
