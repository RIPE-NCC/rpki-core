package net.ripe.rpki.domain.interca;

import lombok.Value;
import lombok.With;
import net.ripe.ipresource.ImmutableResourceSet;
import net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor;

import javax.security.auth.x500.X500Principal;
import java.security.PublicKey;

import static java.util.Objects.requireNonNull;

/**
 * This class does not represent any RFC and used for internal request-response modelling
 * of hosted CAs parent-child interaction.
 *
 * CertificateIssuanceRequest is to be generated by a child CA that wants to have a new
 * certificate issued by the parent CA.
 */
@Value
@With
public class CertificateIssuanceRequest implements CertificateProvisioningMessage {

    ImmutableResourceSet resources;
    X500Principal subjectDN;
    PublicKey subjectPublicKey;
    X509CertificateInformationAccessDescriptor[] subjectInformationAccess;

    public CertificateIssuanceRequest(ImmutableResourceSet resources,
                                      X500Principal subjectDN,
                                      PublicKey subjectPublicKey,
                                      X509CertificateInformationAccessDescriptor[] subjectInformationAccess) {
        this.resources = requireNonNull(resources, "resources is required");
        this.subjectDN = requireNonNull(subjectDN, "subjectDN is required");
        this.subjectPublicKey = requireNonNull(subjectPublicKey, "subjectPublicKey is required");
        this.subjectInformationAccess = requireNonNull(subjectInformationAccess, "subjectInformationAccess is required");
    }

}
